#!/usr/bin/env bash
# @import console/die
# @import array/join
# @import lang/required
# @import lang/executeIn
# vim: set ft=sh:

dockerBuild () (
    strict true

    local imageDirectory="${DOCKER_DIRECTORY:-${MANAGE_REPOSITORY}/images}"
    local scope="${DOCKER_SCOPE:-internal}"

    build () {
        local cmd
        local directory="$1"
        local dockerFile
        local prefix
        local repository
        local suffix
        local tags

        if [[ -d "${directory}" ]]
        then
            repository="$(basename "${directory}")"

            cd "${directory}" || die "${directory} does not exist"

            for dockerFile in "${imageDirectory}/${repository}"/Dockerfile.*
            do
                if [[ -f "${dockerFile}" ]]
                then
                    prefix=" -t ${scope}/${repository}:"
                    suffix="-f ${dockerFile} ${MANAGE_REPOSITORY}"
                    # shellcheck disable=SC2034
                    tags=($(MANAGE_TAG "tag" "${dockerFile}"))

                    if [ ${#tags[@]} -eq 0 ]
                    then
                        tags=("latest")
                    fi

                    cmd="$(join tags "${prefix}")"
                    cmd="docker build --force-rm${prefix}${cmd} ${suffix}"

                    executeIn "${MANAGE_REPOSITORY}" "${cmd}"
                fi
            done
        fi
    }

    if required "$1"
    then
        if [[ -d "${imageDirectory}/$1" ]]
        then
            build "${imageDirectory}/$1"
        else
            die "Directory '${imageDirectory}/$1' does not exist"
        fi
    else
        for directory in "${imageDirectory}"/*
        do
            if [[ -d "${directory}" ]]
            then
                build "${directory}"
            fi
        done
    fi
)

