#!/usr/bin/env bash
# @import array/join
# @import lang/required
# @dependency sed
# @dependency sort
# @dependency grep

yaml() {
    #
    # YAML-like parser
    #
    # Usage: _ yaml FILENAME FUNCTIONNAME
    #

    required "$1" "$2" ||
        return 1

    [ -f "$1" ] ||
        return 1

    #shellcheck disable=SC1001
    [[ "$2" =~ ^[-a-zA-Z\_]*$ ]] ||
        return 1

    local parsed
    local s w fs
    s='[[:space:]]*'
    w='[a-zA-Z0-9_]*'
    fs="$(echo @|tr @ '\034')"

    parsed="$(
        sed -ne "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
            -e "s|^\($s\)\($w\)$s[:-]$s\(.*\)$s\$|\1$fs\2$fs\3|p" "$1" |

        awk -F"$fs" '{
            indent = length($1)/2;
            vname[indent] = $2;
            for (i in vname) {if (i > indent) {delete vname[i]}}
                if (length($3) > 0) {
                    vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
                    printf("%s%s%s=(\"%s\")\n", "",vn, $2, $3);
                }
        }' |
        sed 's/_=/+=/g' |
        grep -E '^[a-zA-Z0-9_]+(\+\=|\=)\(\".+\"\)'   |
        sed 's/[a-zA-Z0-9_]\+[\+\=]/\L&/g'
    )"

    local variable
    local result

    variables=($(echo "${parsed}" |
                sed 's/+=.*$//' |
                sed 's/=.*$//'  |
                sort -u))


    result="$(
        echo "${2} () {" \
        'local __keys=('"$(join variables ' ')"')'
        if (( ${#variables[@]} != 0 ))
        then
            for variable in "${variables[@]}"
            do
                echo "local ${variable}"
                echo "${parsed}" |
                grep -E "^${variable}(\+\=|\=)"
            done
        fi
        # shellcheck disable=SC2016
        echo '[[ ! -v "$1" ]] && return 1'
        echo "join \"\$1\" \"\$2\""
        echo '}'
    )"
    echo "${result}"
}
