#!/usr/bin/env bash

[[ $LIBEXEC_MANAGE_LOADED ]] && return

source libexec-functions
source libexec-arguments

swaprun () {
    local name
    local names
    names=("_manage_$1" "$1")
    shift

    for name in "${names[@]}"
    do
        if exists "${name}"
        then
            prepare "${name}" "$@"
            break
        fi
    done
}

run () {
    local name="$1"
    shift || true

    case "${name}" in
        completion)
            swaprun "completion" "$@"
            ;;
        help)
            swaprun "help" "$@"
            ;;
        *)
            if exists "${name}"
            then
                prepare "${name}" "$@"
            else
                swaprun "help" "$@"
            fi
    esac
}

prepare () {
    local name
    local path
    local imports

    name="${1}"
    path="$(getpath "${name}")"
    imports=($(_ tag "import" "${path}"))

    shift || true

    checkdependencies "${path}"

    if isinternal "${name}"
    then
        __ import "${imports[*]}"
        source "${path}"
        main "$@"
    else
        local zero
        local exports
        local commandstring
        zero="$(basename "${MANAGEZERO}")"
        libexec="source \"${MANAGEDIRECTORY}/libexec/manage\""

        exports="MANAGEDIRECTORY=\"${MANAGEDIRECTORY}\"
                 MANAGEREPOSITORY=\"${MANAGEREPOSITORY}\"
                 MANAGESCRIPTPATH=\"${path}\"
                 MANAGEZERO=\"${MANAGEZERO}\"
                 MANAGEIMPORT=\"$(_ join imports ' ')\""

        commandstring="$(echo "${exports} && ${libexec}" | _ squeeze | tr '\n' ' ')"

        (
            exec -a "${zero}"         \
                "bash"                  \
                "--norc"                \
                "--noprofile"           \
                "-c" "${commandstring}" \
                "${zero}"             \
                "$@"
        ) || exit $?
    fi
}

LIBEXEC_MANAGE_LOADED=1

