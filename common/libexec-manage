#!/usr/bin/env bash

[[ $LIBEXEC_MANAGE_LOADED ]] && return

source libexec-functions
source libexec-arguments

swaprun () {
    local name
    local names
    names=("_manage_$1" "$1")
    shift

    for name in "${names[@]}"
    do
        if exists "${name}"
        then
            break
        fi
    done

    prepare "${name}" "$@"
}

run () {
    local name="$1"

    case "${name}" in
        completion)
            shift
            swaprun "completion" "$@"
            ;;
        help)
            shift
            swaprun "help" "$@"
            ;;
        *)
            if exists "${name}"
            then
                shift
                prepare "${name}" "$@"
            else
                name="$(yml default || echo help)"

                if exists "${name}"
                then
                    prepare "${name}" "$@"
                elif [[ "${name}" == "help" ]]
                then
                    swaprun "help" "$@"
                else
                    _ die "The default script \"${name}\" defined in .manage.yml does not exist."
                fi
            fi
    esac
}

getenv ()
{
    if declare -f "yml" > /dev/null 2>&1
    then
        local keys
        local key
        keys="$(yml __keys || echo)"
        for key in ${keys}
        do
            if [[ "${key}" =~ ^env_.* ]]
            then
                echo "$(_ upper <<< "${key#env_}")=\"$(yml "${key}" || echo)\""
            fi
        done
    fi
}

gettest ()
{
    if declare -f "yml" > /dev/null 2>&1
    then
        yml tests || echo test
    else
        echo test
    fi
}


prepare () {
    local name
    local path
    local imports
    local code=0

    name="${1}"
    path="$(getpath "${name}")"
    imports=($(_ tag "import" "${path}"))

    shift || true

    checkscriptdependencies "${path}"

    if isinternal "${name}"
    then
        __ import "${imports[*]}"
        source "${path}"
        main "$@" || code=$?
    else
        local zero
        local exports
        local commandstring
        zero="$(basename "${MANAGEZERO}")"
        libexec="source \"${MANAGEDIRECTORY}/libexec/manage\""

        exports="$(getenv)
                 MANAGEDIRECTORY=\"${MANAGEDIRECTORY}\"
                 MANAGEREPOSITORY=\"${MANAGEREPOSITORY}\"
                 MANAGETESTDIRECTORY=\"${MANAGEREPOSITORY}/$(gettest)\"
                 MANAGESCRIPTPATH=\"${path}\"
                 MANAGEZERO=\"${MANAGEZERO}\"
                 MANAGEIMPORT=\"$(_ join imports ' ')\""

        commandstring="$(echo "${exports} && ${libexec}" | tr '\n' ' ' | _ squeeze )"

        (
            exec -a "${zero}"           \
                "bash"                  \
                "--norc"                \
                "--noprofile"           \
                "-c" "${commandstring}" \
                "${zero}"               \
                "$@"
        ) || code=$?
    fi

    cachescripts || true
    exit "${code}"
}

LIBEXEC_MANAGE_LOADED=1

