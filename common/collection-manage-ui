#!/usr/bin/env bash

[[ $COLLECTION_MANAGE_UI_LOADED ]] && return
_topicCount () {
    _count _topicNames
}

_forEachTopic () {
    _forEach _topicNames "$*"
}

_getTopic () {
    _get _topicNames "$*"
}

_getTopicDoc () {
    _doc "$(_get _topicPaths "$*")"
}

_getTopicExtendedDoc () {
    _docExtended "$(_get _topicPaths "$*")"
}

_docExtended () {
    _embeddedTag "doc" "$@"
}


_doc () {
    local doc line
    doc="$(_embeddedTag "doc" "$@")"
    if [[ "${doc}" =~ ^([A-Z]{1,}[^.]*.) ]]
    then
        line="${BASH_REMATCH[1]}"
    elif [[ "${doc}" =~ ^([^.]*.) ]]
    then
        line="${BASH_REMATCH[1]}"
    fi
    if [ -n "${line}" ]
    then
        echo "${line}" | sed ':a;N;$!ba;s/\n/ /g'
    fi
}

_usageHeaderPath () {
    if [ -n "$*" ]
    then
        _HEADERPATH="$*"
    else
        if [ -n "${_HEADERPATH}" ]
        then
            echo "${_HEADERPATH}"
        else
            echo "${MANAGEPATH}"
        fi
    fi
}

_usageHeader () {
    local doc
    doc="$(_doc "$(_usageHeaderPath)")"

    [ -n "${doc}" ] && echo -e "${doc}\n"

    echo -e "General Options"
    printf "  %-15s %10s\n" "-v" "Be verbose."
    printf "  %-15s %10s\n" "-h [subcommand]" "Display the help message."
    echo
}

_usageSubcommandLine () {
    printf "  %-15s %10s\n" "$(_getTopic "$@")" "$(_getTopicDoc "$@")"
}


_usageSubcommands () {
    if [[ "$(_topicCount)" != 0 ]];
    then
        echo -e "Subcommands"        &&
        _forEachTopic _usageSubcommandLine
    fi
}

_usageSubcommand () {
    local index
    index="$(_topicIndexOf "$*")"
    echo "Usage: $(basename "$0") [-vh] $* [<args>]"
    _getTopicExtendedDoc "${index}"
}

# _usage () {
#     if _topicExists "$*"
#     then
#         _usageSubcommand "$*"
#     else
#         true
#         # _usageHeader
#         # _usageSubcommands
#     fi
# }

COLLECTION_MANAGE_UI_LOADED=1
