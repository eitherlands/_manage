#!/usr/bin/env bash

proceedwithurl () {
    #TODO: parse git urls
    true
}

processsinglescript ()
{
    local file

    if isscript "${1}"
    then
        file="$(expandpath "$1")"
        SCRIPTPATHS+=("${file}")
        SCRIPTNAMES+=("${2}$(basename "${file}")")
    else
        return 1
    fi
}

processscriptordirectory () {
    local file

    if isdirectory "$1"
    then
        for file in "$1"/* "$1"/**/*
        do
            processsinglescript "${file}" "$2" || true
        done
    elif isfile "$1"
    then
        processsinglescript "$1" "$2" || return 1
    else
        return 1
    fi
}

processyaml () {
    eval "$(_ yaml "${MANAGEREPOSITORY}/.manage.yml" "yml")"
    MANAGESCRIPTDIRECTORY="$(yml scripts || echo script)"
    checkdependencies "$(yml dependencies || echo)"
}

proceedwithrepository ()
{
    if isscript "$1"
    then
        searchpath "$1" && processyaml

        processscriptordirectory "$1"
        shift
        run "${SCRIPTNAMES[0]}" "$@"
    else
        if isrepository "$1"
        then
            shift
        else
            true
        fi

        isdirectory "${MANAGEDIRECTORY}/script" ||
            return 1

        if [[ ! ${MANAGEREPOSITORY} == "${MANAGEDIRECTORY}" ]]
        then
            processscriptordirectory "${MANAGEDIRECTORY}/script" "_manage_"
        fi

        processyaml

        processscriptordirectory "${MANAGEREPOSITORY}/${MANAGESCRIPTDIRECTORY}" ||
            _ die "Cannot find ${MANAGEREPOSITORY}/${MANAGESCRIPTDIRECTORY}, aborting."

        run "$@"
    fi
}

isrepository ()
{
    _ required "$1" ||
        return 1

    [[ "$1" == "${MANAGELIBEXEC}"   ]] && return 1
    [[ "$1" == "${MANAGEDIRECTORY}" ]] && return 1

    isdirectory "$1" || return 1
    isfile "$1/.manage.yml" || return 1

    MANAGEREPOSITORY="$(expandpath "$1")"
}

searchpath ()
{
    _ required "$1" || return 1
    local path
    local code=1

    for path in "$@"
    do
        while [ "${path}" != "/" ] &&
              [ "${path}" != "." ]
        do
            if isrepository "${path}"
            then
                code=0
                break
            else
                path="$(dirname "${path}")"
            fi
        done
        [ "${code}" == "0" ] && break
    done

    return "${code}"
}

collectscripts ()
{
    local callerdirectory
    local paths
    callerdirectory="$(dirname "$(expandpath "${MANAGEZERO}")")"
    paths=( "${callerdirectory}" "${MANAGECWD}" "$1" )

    if searchpath "${paths[@]}"
    then
        proceedwithrepository "$@"
    elif isurl "$1"
    then
        proceedwithurl "$@"
    else
        MANAGEREPOSITORY="${MANAGEDIRECTORY}"
        proceedwithrepository "$@"
    fi
}
