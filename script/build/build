#!/usr/bin/env manage
#
# vim: set ft=sh:
#
# <doc>
#
# Build manage
#
# </doc>
#
# <import>
#
# collection-shell
# collection-message
# collection-string
#
# </import>
#
# <dependency>
#
# docker
#
# </dependency>
#
# Environment variables passed by assemble
#
# MANAGE_BUILD
# MANAGE_BUILD_URL
# MANAGE_BUILD_TAG
# MANAGE_BUILD_VERSION
# MANAGE_BUILD_REFERENCE
#

main ()
{
    verbose true
    strict true

    local file
    local tries="3"

    cd "${MANAGEDIRECTORY}" || _ die

    for file in "${MANAGEDIRECTORY}/script/build/docker/Dockerfile".*
    do
        [ -f "${MANAGEDIRECTORY}/Dockerfile" ] &&
        rm -f "${MANAGEDIRECTORY}/Dockerfile"
        image="$(grep FROM "${file}")"
        image="${image#FROM }"
        image="${image//:/-}"

        cp -f "${file}" "${MANAGEDIRECTORY}/Dockerfile"

        _ info "Building '${image}'."

        _ retry "${tries}" docker build -t "manage:${image}" . > /dev/null 2>&1 ||
            _ error "Failed to build '${image}'."

        _ info "Running '${image}' tests."

        docker run "manage:${image}" test ||
            _ error "Tests failed for '${image}'"
    done
}

onexit ()
{
    [ -f "${MANAGEDIRECTORY}/Dockerfile" ] &&
    rm -f "${MANAGEDIRECTORY}/Dockerfile"

    # if (( $1 == 0 ))
    # then
    #     _ warn "Exiting."
    # else
    #     _ error "An error with exit code \"$1\" has occured."
    # fi
}
