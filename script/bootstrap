#!/usr/bin/env bash
#
# vim: set ft=sh:
#
# <doc>
#
# Bootstrap manage project in the current directory
#
# </doc>
#
# <import>
#
# collection-shell
# collection-string
# collection-message
# collection-path
#
# </import>

_managePath () {
    local destinationpath
    local sourcepath
    local path
    destinationpath="$1"
    sourcepath="$(pwd)"
    path="$(_ relpath "${destinationpath}" "${sourcepath}")"
    if [[ "${path}" == ".." ]] ||
       [[ "${path}" == "."  ]]
    then
        _ die "Consider a path outside of the manage repository."
    else
        echo "${path}"
    fi
}

_scriptPath () {
    _ required "$1" ||
        _ die
    local scriptdir
    local managedir
    local absmanagedir
    local absscriptdir
    local checkcommon

    managedir="$1"

    if _ required "$2"
    then
        scriptdir="$2"
    else
        scriptdir="script"
    fi

    absmanagedir="$(_ abspath "${managedir}")"
    absscriptdir="$(_ abspath "${scriptdir}")"
    checkcommon="$(_ commonpath "${absmanagedir}" "${absscriptdir}")"
    if [ "${checkcommon}" == "${absmanagedir}" ]
    then
        _ die "Consider a path outside of the manage repository."
    else
        echo "${scriptdir}"
    fi
}

main () {
    strict true
    verbose true

    local cwd
    local test
    local script

    cwd="$(_managePath "${MANAGEDIRECTORY}")"
    script="$(_scriptPath "${cwd}" "$(echo "$*" | _ joinLines " ")")"
    test="${script}/test"

    _ info "Absolute path to manage directory $(_ abspath "${cwd}")"
    _ info "Absolute path to script directory $(_ abspath "${script}")"
    _ info "Absolute path to test directory $(_ abspath "${test}")"

    if [ ! -d "${script}" ];
    then
        _ info "Creating script directory $(_ abspath "${script}")"
        mkdir "${script}"
    fi

    if [ ! -d "${test}" ];
    then
        _ info "Creating test directory $(_ abspath "${test}")"
        mkdir "${test}"
    fi

    cp -Li  "${cwd}/template/hello"        "${script}/hello"
    cp -Li  "${cwd}/template/gitignore"    "${script}/.gitignore"
    cp -Li  "${cwd}/template/helper.bash"  "${test}/helper.bash"
    cp -Li  "${cwd}/template/hello.bats"   "${test}/hello.bats"
    cp -Li  "${cwd}/template/manage.yml"   "${PWD}/.manage.yml"
    ln -si  "${cwd}/libexec/manage"        "${PWD}/manage"
}

