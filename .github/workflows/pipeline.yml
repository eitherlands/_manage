on:
  push:
    branches:
    - '*'
    - '!release'
    tags:
    - 'v*'
name: Pipeline
jobs:
  test-linux:
    name: "Linux Test"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite: [centos]
    steps:
    - uses: actions/checkout@v4
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: manage ci
      run: |
        ./manage trust-escapace
        ./manage ci
      env:
        TEST_SUITE: ${{ matrix.suite }}
  test-macOS:
    name: "macOS Test"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: manage ci
      run: |
        brew install bash gnu-sed gnupg
        ./manage trust-escapace
        ./manage ci
      env:
        TEST_SUITE: osx
  docker:
    name: "Docker build and push"
    runs-on: ubuntu-latest
    needs: [test-macOS, test-linux]
    steps:
    - uses: actions/checkout@v4
      if: contains(github.ref, 'tags/v')
    - name: Checkout submodules
      if: contains(github.ref, 'tags/v')
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Docker Build & Push
      if: contains(github.ref, 'tags/v')
      shell: bash
      run: |
        echo ${DOCKER_ACCESS_TOKEN} | docker login -u ${DOCKER_USERNAME} --password-stdin
        docker build -t escapace/manage:latest -t escapace/manage:${GITHUB_REF:11} .
        docker push escapace/manage:latest
        docker push escapace/manage:${GITHUB_REF:11}
      env:
        DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  release:
    name: "Github Release"
    runs-on: ubuntu-latest
    needs: [test-macOS, test-linux]
    steps:
    - uses: actions/checkout@v4
      if: contains(github.ref, 'tags/v')
    - name: Checkout submodules
      if: contains(github.ref, 'tags/v')
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: release
      if: contains(github.ref, 'tags/v')
      run: |
        mkdir ~/bin
        wget -qO- https://github.com/github/hub/releases/download/v2.12.3/hub-linux-amd64-2.12.3.tgz | tar xvz -C ~/bin --strip=2 --wildcards --no-anchored 'hub*/bin/hub'
        ~/bin/hub release create -a manage -m "manage ${GITHUB_REF:11}" -t release v${GITHUB_REF:11}
      env:
        GITHUB_USER: escapace
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
